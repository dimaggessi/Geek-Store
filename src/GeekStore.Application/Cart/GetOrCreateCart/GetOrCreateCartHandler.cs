using GeekStore.Domain.Entities;
using GeekStore.Domain.Interfaces;
using GeekStore.Domain.Shared;
using MediatR;

namespace GeekStore.Application.Cart.CreateCart;

public sealed record GetOrCreateCart() : IRequest<Result<ShoppingCart>>
{
    public required string Id { get; init; }
}
public class GetOrCreateCartHandler(IShoppingCartRepository cartRepository)
    : IRequestHandler<GetOrCreateCart, Result<ShoppingCart>>
{
    public async Task<Result<ShoppingCart>> Handle(GetOrCreateCart request,
        CancellationToken cancellationToken)
    {
        var cart = await cartRepository.GetCartAsync(request.Id);

        if (cart is null)
        {
            // Cart ID generated by Client Side
            var newCart = new ShoppingCart { Id = request.Id };
            return Result.Success(newCart);
        }

        return Result.Success(cart);
    }
}
