<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EMPTY_PRODUCT_NAME" xml:space="preserve">
    <value>Product name is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_BRAND" xml:space="preserve">
    <value>Product brand is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_DESCRIPTION" xml:space="preserve">
    <value>Product description is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_HEIGHT" xml:space="preserve">
    <value>Product height is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_LENGTH" xml:space="preserve">
    <value>Product length is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_PICTURE" xml:space="preserve">
    <value>Product picture is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_PRICE" xml:space="preserve">
    <value>Product price is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_QUANTITY" xml:space="preserve">
    <value>Product quantity is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_TYPE" xml:space="preserve">
    <value>Product type is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_WEIGHT" xml:space="preserve">
    <value>Product weight is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_WIDTH" xml:space="preserve">
    <value>Product width is required.</value>
  </data>
  <data name="MAX_PRODUCT_NAME" xml:space="preserve">
    <value>Product name must not exceed 100 characters.</value>
  </data>
  <data name="MAX_PRODUCT_BRAND" xml:space="preserve">
    <value>Product brand must not exceed 100 characters.</value>
  </data>
  <data name="MAX_PRODUCT_DESCRIPTION" xml:space="preserve">
    <value>Product description must not exceed 300 characters.</value>
  </data>
  <data name="MAX_PRODUCT_TYPE" xml:space="preserve">
    <value>Product type must not exceed 100 characters.</value>
  </data>
  <data name="MIN_PRODUCT_PRICE" xml:space="preserve">
    <value>Price must be greater than zero.</value>
  </data>
  <data name="MIN_PRODUCT_QUANTITY" xml:space="preserve">
    <value>Product quantity cannot be zero or negative.</value>
  </data>
  <data name="MIN_PRODUCT_HEIGHT" xml:space="preserve">
    <value>Product height must be greater than zero.</value>
  </data>
  <data name="MIN_PRODUCT_LENGTH" xml:space="preserve">
    <value>Product length must be greater than zero.</value>
  </data>
  <data name="MIN_PRODUCT_WEIGHT" xml:space="preserve">
    <value>Product weight must be greater than zero.</value>
  </data>
  <data name="MIN_PRODUCT_WIDTH" xml:space="preserve">
    <value>Product width must be greater than zero.</value>
  </data>
  <data name="EMPTY_PRODUCT_ID" xml:space="preserve">
    <value>Product Id is required.</value>
  </data>
  <data name="ERROR_CREATE_PRODUCT" xml:space="preserve">
    <value>Something went wrong while creating the product!</value>
  </data>
  <data name="DEFAULT_ERROR" xml:space="preserve">
    <value>Error.</value>
  </data>
  <data name="DEFAULT_NOT_FOUND" xml:space="preserve">
    <value>Not found.</value>
  </data>
  <data name="PRODUCT_NOT_FOUND" xml:space="preserve">
    <value>Product was not found.</value>
  </data>
  <data name="ERROR_REMOVE_PRODUCT" xml:space="preserve">
    <value>Unable to remove product.</value>
  </data>
  <data name="ERROR_UPDATE_PRODUCT" xml:space="preserve">
    <value>Unable to persist product in database.</value>
  </data>
  <data name="UNEXPECTED_ERROR" xml:space="preserve">
    <value>An unexpected error occurred.</value>
  </data>
  <data name="REQUEST_ERROR" xml:space="preserve">
    <value>An error occurred while processing your request.</value>
  </data>
  <data name="PRODUCT_ID_AND_URL_MISMATCH" xml:space="preserve">
    <value>Product Id and url mismatch.</value>
  </data>
  <data name="MIN_PAGE_INDEX" xml:space="preserve">
    <value>Page index must be greater than zero.</value>
  </data>
  <data name="REQUIRED_PAGE_INDEX" xml:space="preserve">
    <value>Page index is required.</value>
  </data>
  <data name="INTERVAL_PAGE_SIZE" xml:space="preserve">
    <value>Page size must be between 1 and 10.</value>
  </data>
  <data name="SHOPPING_CART_ERROR" xml:space="preserve">
    <value>An error with shopping cart was happen.</value>
  </data>
  <data name="EMPTY_SHOPPING_CART_ID" xml:space="preserve">
    <value>Shopping cart Id is required.</value>
  </data>
  <data name="REMOVE_ERROR" xml:space="preserve">
    <value>Error while removing from database.</value>
  </data>
  <data name="GENERIC_SUCCESS_OPERATION" xml:space="preserve">
    <value>Successful operation.</value>
  </data>
  <data name="SHOPPING_CART_NULL" xml:space="preserve">
    <value>The given shopping cart cannot be null.</value>
  </data>
  <data name="AUTH_USER_NOT_SIGNED_IN" xml:space="preserve">
    <value>User is not signed in.</value>
  </data>
  <data name="AUTH_DEFAULT_ERROR" xml:space="preserve">
    <value>Authentication error.</value>
  </data>
  <data name="AUTH_EMAIL_ALREADY_EXISTS" xml:space="preserve">
    <value>The given email already exists.</value>
  </data>
  <data name="AUTH_UNEXPECTED_CREATE_USER_ERROR" xml:space="preserve">
    <value>An error occurred while attempt to create user.</value>
  </data>
  <data name="AUTH_CREATE_USER_SUCCESS" xml:space="preserve">
    <value>User created with success.</value>
  </data>
  <data name="AUTH_EMAIL_CLAIM_NOT_FOUND" xml:space="preserve">
    <value>Email claim not found.</value>
  </data>
  <data name="AUTH_USER_NOT_FOUND" xml:space="preserve">
    <value>User not found.</value>
  </data>
  <data name="ADDRESS_CITY" xml:space="preserve">
    <value>City is required.</value>
  </data>
  <data name="ADDRESS_CITY_MAX" xml:space="preserve">
    <value>City cannot exceed 50 characters.</value>
  </data>
  <data name="ADDRESS_COUNTRY" xml:space="preserve">
    <value>Country is required.</value>
  </data>
  <data name="ADDRESS_COUNTRY_MAX" xml:space="preserve">
    <value>Country cannot exceed 50 characters.</value>
  </data>
  <data name="ADDRESS_NEIGHBORHOOD_MAX" xml:space="preserve">
    <value>Neighborhood cannot exceed 100 characters.</value>
  </data>
  <data name="ADDRESS_POSTAL_CODE" xml:space="preserve">
    <value>Postal Code is required.</value>
  </data>
  <data name="ADDRESS_POSTAL_CODE_MAX" xml:space="preserve">
    <value>Postal Code cannot exceed 20 characters.</value>
  </data>
  <data name="ADDRESS_STATE" xml:space="preserve">
    <value>State is required.</value>
  </data>
  <data name="ADDRESS_STATE_MAX" xml:space="preserve">
    <value>State cannot exceed 50 characters.</value>
  </data>
  <data name="ADDRESS_STREET" xml:space="preserve">
    <value>Street is required.</value>
  </data>
  <data name="ADDRESS_STREET_MAX" xml:space="preserve">
    <value>Street cannot exceed 100 characters</value>
  </data>
  <data name="ADDRESS_ERROR" xml:space="preserve">
    <value>Problem while setting user address.</value>
  </data>
  <data name="CART_NOT_FOUND" xml:space="preserve">
    <value>Cart not found.</value>
  </data>
  <data name="EMPTY_POSTAL_CODE" xml:space="preserve">
    <value>Postal Code is required.</value>
  </data>
  <data name="VALID_POSTAL_CODE" xml:space="preserve">
    <value>Postal Code must be valid with exactly 8 numeric digits.</value>
  </data>
  <data name="EMPTY_DELIVERY_METHOD_ID" xml:space="preserve">
    <value>Delivery Method ID is required.</value>
  </data>
  <data name="EMPTY_PRODUCT_LIST" xml:space="preserve">
    <value>The list of products must contain at least one product, cannot be empty.</value>
  </data>
  <data name="ERROR_DELIVERY_METHODS_NOT_FOUND" xml:space="preserve">
    <value>An error occurred while trying to get delivery methods.</value>
  </data>
  <data name="ERROR_PICTURE_URL" xml:space="preserve">
    <value>Picture must be a valid URI.</value>
  </data>
  <data name="EMPTY_PAYMENT_INTENT_ID" xml:space="preserve">
    <value>No payment intent was found for this order.</value>
  </data>
  <data name="ERROR_DELIVERY_METHOD_SELECT" xml:space="preserve">
    <value>No delivery method selected.</value>
  </data>
  <data name="ERROR_GET_PRODUCT" xml:space="preserve">
    <value>Unable to get product item from the database.</value>
  </data>
  <data name="ERROR_ORDER_PERSIST" xml:space="preserve">
    <value>An unexpected error occurred while trying to persist order in database.</value>
  </data>
  <data name="ADDRESS_NULL" xml:space="preserve">
    <value>Address is required and cannot be null.</value>
  </data>
  <data name="EMPTY_ADDRESS_NAME" xml:space="preserve">
    <value>Address name is required.</value>
  </data>
  <data name="EMPTY_CUSTOMER_EMAIL" xml:space="preserve">
    <value>Customer email is required.</value>
  </data>
  <data name="EMPTY_PAYMENT_CARD_BRAND" xml:space="preserve">
    <value>Card brand is required.</value>
  </data>
  <data name="EMPTY_PAYMENT_CARD_LAST4" xml:space="preserve">
    <value>Card last four digits are required.</value>
  </data>
  <data name="ERROR_EMAIL_INVALID" xml:space="preserve">
    <value>Email must be in a valid format email@provider</value>
  </data>
  <data name="ERROR_INVALID_ID" xml:space="preserve">
    <value>Property Id must be greater than zero.</value>
  </data>
  <data name="INVALID_CARD_BRAND" xml:space="preserve">
    <value>Card brand must have between 2 and 50 caracteres.</value>
  </data>
  <data name="PAYMENT_SUMMARY_NOT_NULL" xml:space="preserve">
    <value>Payment Summary is required and cannot be null.</value>
  </data>
  <data name="INVALID_CARD_EXPMONTH" xml:space="preserve">
    <value>The card's month expiration date must be between 1 and 12.</value>
  </data>
  <data name="INVALID_CARD_YEAR" xml:space="preserve">
    <value>The card's expiration year must be the current year or greater.</value>
  </data>
  <data name="ERROR_EMAIL_NOT_FOUND" xml:space="preserve">
    <value>User's email was not found. You must be logged in.</value>
  </data>
</root>